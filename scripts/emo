#!/bin/bash
DB="${XDG_DATA_HOME:-$HOME/.local/share}/emojis/db"

declare -A emojis
declare -A unis
declare -A functs

function usage () {
  [ -f "$DB" ] && echo 'emoji NAME | [ ls | add [-p] NAME | del NAME | config ]'
}

function load () {
  if [ ! -f "$DB" ]; then 
    echo "No DB detected at $DB, one will be created now..." 
    mkdir -p "${DB%%*/}"
    touch "$DB"
    echo "smile ðŸ˜€" >> "$DB"
    echo "...with a new emoji for you! ðŸ˜€"
  fi
  IFS=$'\n'; for e in `cat "$DB"`; do
    emojis[$(echo "$e" | cut -d' ' -f1)]=$(echo "$e" | cut -d' ' -f2)
    unis[$(echo "$e" | cut -d' ' -f1)]=$(echo "$e" | cut -d' ' -f3)
    functs[$(echo "$e" | cut -d' ' -f1)]=$(echo "$e" | cut -d' ' -f4-)
  done
}


function add () {
  [ "$#" -lt 2 ] && echo "emo -a ALIAS UNICODE" && return 1
  local new_emoji="$1"
  local new_unicode="$2"
  for e in "${!emojis[@]}"; do
    [ "$e" == "$new_emoji" ] && echo "$new_emoji  already exists!" && return 1
  done
  echo "$@" >> "$DB"
}

add_unicode(){
  [ "$#" -ne 2 ] && return 1
  local n="$2"
  local u='\u'
  for i in "${!emojis}"; do
    [ "$1" == "$i" ] && return 1
  done
  emojis["$1"]="$u$2"
  export emojis
  printf "Added :$1: -> $(emo $2)\n"
}

function emo () {
  [ "$#" -ne 1 ] && echo no && return 1
  printf "%s" "${emojis[$1]}"
}
#emo(){ local u='\U'; printf "$u${emojis[$1]}"; }

list(){
  declare -a emolines
  IFS=$'\n'; for e in "${!emojis[@]}"; do 
    echo "$e ${emojis[$e]}"
  done
}

function dump () {
  cat "$DB" 
}

function get_func () {
  printf "%s" "${functs[$1]}"
}

[ -z "$1" ] && echo no && exit 1
load
case "$1" in 
  --add|-a) shift; add "$@"; exit 0;;
  --dump|-d) dump; exit 0;;
  --list|-l) list; exit 0;;
  --func|-f) shift; get_func "$1";;
  --help|-h) usage; exit 0;;
  *) emo "$1";;
esac




export -f emo
complete -W "${!emojis[@]}" emo
#[ "${#COMP_WORDS[@]}" -gt 2 ] && return
