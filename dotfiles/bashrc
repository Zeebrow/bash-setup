# --------------------------------------------------------------------
case $- in
*i*) ;; # interactive
*) return ;; 
esac
# ----------------------- environment variables ----------------------

export GITUSER="$USER"
#export DOTFILES="$HOME/repos/github.com/$GITUSER/dot"
#export GHREPOS="$HOME/repos/github.com/$GITUSER/"

export TERM=xterm-256color
export EDITOR=vi
export VISUAL=vi
export EDITOR_PREFIX=vi

export PERL5LIB="$HOME/.local/lib/perl5"

export PYTHONDONTWRITEBYTECODE=1

test -d ~/.vim/spell && export VIMSPELL=(~/.vim/spell/*.add)

#export GOPRIVATE="github.com/$GITUSER/*,gitlab.com/$GITUSER/*"
#export GOPATH=/home/zeebrow/.local/share/go
export GOPATH=/home/zeebrow/go
export GOROOT=/usr/local/go
#export GOBIN=~/.local/bin
export GOPROXY=direct
#export CGO_ENABLED=0

export MYREPOS="$HOME/repos/github.com/$USER"
export SANDBOX="$HOME/sandbox"

# TODO questionable
for lib in `ls "$HOME/.local/bin/scripts/libs"`; do
  source "$HOME/.local/bin/scripts/libs/$lib"
done
# source completions
for cmpl in `ls "$HOME/.local/bin/scripts/completions"`; do
  source "$HOME/.local/bin/scripts/completions/$cmpl"
done
### rootless docker
export PATH=/usr/bin:$PATH
export DOCKER_HOST=unix:///run/user/1000/docker.sock


# ---------------------------------XDG-------------------------------
# All default unless otherwise noted
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"

# for XDG_*_DIRS, the first directory takes presedence, which is the opposite of PATH
export XDG_DATA_DIRS=/usr/local/share/:/usr/share/
export XDG_CONFIG_DIRS=/etc/xdg
export XDG_CACHE_HOME="$HOME/.cache"
# tricky one. From the docs:
# "Files in this directory MAY be subjected to periodic clean-up. 
# To ensure that your files are not removed, they should have their access time timestamp modified
# at least once every 6 hours of monotonic time or the 'sticky' bit should be set on the file."
# XDG_RUNTIME_DIR=/run/user/1000


# ------------------------------- pager ------------------------------

if test -x /usr/bin/lesspipe; then
  export LESSOPEN="| /usr/bin/lesspipe %s";
  export LESSCLOSE="/usr/bin/lesspipe %s %s";
fi

# whaever, use tput because it doesn't bleed colors. Neglible speed hit.
export LESS_TERMCAP_mb=$(tput bold; tput setaf 2) # green
export LESS_TERMCAP_md=$(tput bold; tput setaf 3) # headings, entry names, etc...
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 4) # bottom line
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 11) # options
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)

# ----------------------------- dircolors ----------------------------

if which dircolors &>/dev/null; then
  if test -r ~/.dircolors; then
    eval "$(dircolors -b ~/.dircolors)"
  else
    eval "$(dircolors -b)"
  fi
fi

# ------------------------------- path -------------------------------
# Ubuntu default path - /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


pathappend() {
  for ARG in "$@"; do
    test -d "${ARG}" || continue
    PATH=${PATH//:${ARG}:/:}
    PATH=${PATH/#${ARG}:/}
    PATH=${PATH/%:${ARG}/}
    export PATH="${PATH:+"${PATH}:"}${ARG}"
  done
}

pathprepend() {
  for ARG in "$@"; do
    test -d "${ARG}" || continue
    PATH=${PATH//:${ARG}:/:}
    PATH=${PATH/#${ARG}:/}
    PATH=${PATH/%:${ARG}/}
    export PATH="${ARG}${PATH:+":${PATH}"}"
  done
}

export SCRIPTS=~/.local/bin/scripts

# remember last arg will be first in path
pathprepend \
  /usr/local/go/bin \
  ~/.local/bin \
  "$SCRIPTS" 


# cant comment out lines here, or bash will whine
pathappend \
  /usr/local/bin \
  /usr/local/sbin \
  /usr/sbin \
  /usr/bin \
  /snap/bin \
  /sbin \
  /bin

# ------------------------------ cdpath ------------------------------

export CDPATH=.:\
~/repos/github.com/$GITUSER:\
~

# ------------------------ bash shell options ------------------------
#shopt -s direxpand
shopt -s checkwinsize
#shopt -s expand_aliases
shopt -s globstar
shopt -s dotglob
shopt -s extglob
#shopt -s nullglob # bug kills completion for some
#set -o noclobber
set -o emacs
shopt -s histappend
# ------------------------------ history -----------------------------

export HISTCONTROL=ignoreboth
export HISTSIZE=5000
export HISTFILESIZE=10000


# --------------------------- smart prompt ---------------------------

PROMPT_LONG=50
PROMPT_MAX=95
__ps0() {
  :
}
__ps1() {
  local L="$?"
  #[ "$LAST_CMD" -ne 0 ] && L="($LAST_CMD) " 
  if [ "$L" -eq 0 ]; then
    L=""
  else
    L="($L) "
  fi
  
  local Crst='\[\033[0m\]'
  local Cred='\[\033[31m\]'
  local CBlu='\[\033[34m\]'
  local P='$'
  L="$Cred$L$Crst"

    local r='\[\033[31m\]'
    # separators, e.g.'@'
    local g='\[\033[30m\]'
    # hostname \h
    local h='\[\033[34m\]'
    # user \u
    local u='\[\033[33m\]'
    local p='\[\033[33m\]'
    local w='\[\033[35m\]'
    local b='\[\033[36m\]'

    local wh='\[\033[97m\]'
    local gr='\[\033[32m\]'
    local ye='\[\033[33m\]'
    local dg='\[\033[90m\]'
    local pu='\[\033[35m\]'
    local db='\[\033[34m\]'
    local x='\[\033[0m\]'

    local _ul='\[\033[4;37m\]'

  # python virtualenv
  test -n "$VIRTUAL_ENV" && local V="(${VIRTUAL_ENV##*/}) "

  local dir;
  local B=$(git branch --show-current 2>/dev/null)
  # for another day 
  # clickable link in gnome shell - make the git repos clickable!
  # echo -e '\e]8;;http://example.com\aThis is a link\e]8;;\a'

  test "${PWD##*/}" = "$B" && B='.'
  test "$B" = master -o "$B" = main && b="$gr$d"
  [[ $(git config --get branch.master.remote) =~ "pvt" ]] && b="$_ul$b"
  test -n "$B" && B="$x($b$B$x)"

  PS1="$r$L$x$V$ye(\A) $pu\h$dg:$db\W$B$x\$ "
}

PROMPT_COMMAND="__ps1"

# ----------------------------- keyboard -----------------------------

# this is now special chars key
# test -n "$DISPLAY" && setxkbmap -option caps:escape &>/dev/null

# ------------------------------ aliases -----------------------------

unalias -a

alias ls='ls -h --color=auto'
alias ll='ls -l'
alias grep='grep -i --colour=auto'
alias egrep='egrep -i --colour=auto'
alias fgrep='fgrep -i --colour=auto'
alias curl='curl -L'
alias scripts='cd $SCRIPTS'
alias free='free -h'
alias df='df -h'
alias chmox='chmod +x'
alias temp='cd $(mktemp -d)'
alias view='vi -R' # which is usually linked to vim

which vim &>/dev/null && alias vi=vim

alias repos='cd $MYREPOS'
alias sandbox='cd $SANDBOX'
alias gs='git status'
alias gp='git push'
alias gc='git commit'
alias gca='git commit -a'
alias gco='git checkout'
alias glo='git log --oneline'

alias bpa='steck'
# ----------------------------- functions ----------------------------
# see $SCRIPTS/lib

# -------------------- garbage --------------------

#test -r ~/.bash_personal && source ~/.bash_personal
#test -r ~/.bash_private && source ~/.bash_private
#test -r ~/.bash_work && source ~/.bash_work


# ------------------------------garbage-------------------------------
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
