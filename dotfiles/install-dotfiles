#!/bin/bash
# 
# install bash dotfiles in $HOME


# want backup
unset -f backup
backup() {
  [ "$#" -lt 1 ] && return
  local _SFX=.bkup.$(date +%s)
  for i in "$@"; do cp -v "$1" "$1$_SFX"; done
}

# wat
this_script=${BASH_SOURCE/*\//}
this_script=${this_script/\//}
if [ "$0" == "$BASH_SOURCE" ]; then
	_bn="`pwd`/$(basename $0)"
	_rp="$(realpath $0)"
	[ "$_bn" != "$_rp" ] && echo "Must be run from same directory. Exiting!" &&  exit 1
	this_dir=`pwd`
else
	# echo "this was sourced"
	this_dir=$(pwd)/dotfiles
fi

function debug () {
	echo "bash_source: $BASH_SOURCE"
	echo "calling script (\$0): $0"
	echo "realpath $(realpath $BASH_SOURCE)"
	this_script=${BASH_SOURCE/*\//}
	this_script=${this_script/\//}
	echo "this script: $this_script"
}
# /wat

function do_install() {
  echo "installing dotfiles for $USER..."
	for script in `ls $this_dir`; do
		[ "$script" == "$this_script" ] && continue
		test -e $HOME/.$script && backup $HOME/.$script
		cp -v $this_dir/$script $HOME/.$script
	done
}

function do_diff() {
  local different_files=()
  _cwd=$(realpath $1)

  dir1=($(ls -1 "$_cwd" ))
  dir1=(${dir1[*]/install-dotfiles/})
  dir2=($(echo ${dir1[*]/dot_/.}))

  for f in "${dir1[@]}"; do
    diff -q $(realpath "$f") "$HOME/.$f" 2>&1 >> /dev/null
    [ "$?" -ne 0 ] && different_files+=("$f")
  done
  for difff in "${different_files[@]}"; do
    echo "" >/dev/null
    #echo "diff $(realpath $difff) $HOME/.$difff"
  done
  return "${#different_files[*]}"
}

case "$1" in
	diff) do_diff '.' $HOME; exit "$?";;
	install) do_install;;
	*) echo "install-dotfiles diff|install" && exit 1;;
esac

